plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.72'
    id 'maven'
    id 'com.github.johnrengelman.shadow' version '6.1.0'
    id 'java-library'
    id 'java-test-fixtures'
    id 'com.bmuschko.nexus' version '2.3.1'
    id "org.jlleitschuh.gradle.ktlint" version "10.0.0"
    id "jacoco"
    id 'org.jetbrains.dokka' version '0.10.1'
    id 'org.unbroken-dome.test-sets' version '3.0.1'
    id "com.github.ben-manes.versions" version '0.38.0'
}

group = 'com.pubnub'
version = '6.0.0'

repositories {
    mavenCentral()
    jcenter()
}

testSets {
    integrationTest
}

sourceSets {
    test {
        resources {
            srcDir 'src/testFixtures/resources'
        }
    }
    integrationTest {
        resources {
            srcDir 'src/testFixtures/resources'
        }
    }
}

configurations {
    allTest
    testFixturesImplementation { extendsFrom allTest }
    integrationTestImplementation { extendsFrom allTest }
    testImplementation { extendsFrom allTest }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    implementation "com.squareup.retrofit2:retrofit:2.9.0"

    api "com.squareup.okhttp3:logging-interceptor:3.14.9"

    api 'com.google.code.gson:gson:2.8.6'
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.2'
    compile 'com.fasterxml.jackson.module:jackson-module-kotlin:2.12.2'
    implementation "org.slf4j:slf4j-api:1.7.30"

    implementation "org.json:json:20210307"

    allTest "junit:junit:4.13.2"
    allTest "org.awaitility:awaitility-kotlin:4.0.3"
    allTest "com.github.tomakehurst:wiremock:2.27.2"

    allTest "ch.qos.logback:logback-classic:1.2.3"
    allTest "ch.qos.logback:logback-core:1.2.3"
    allTest "org.json:json:20210307"
    allTest "dev.nohus:AutoKonfig:1.0.0"

    testImplementation "io.mockk:mockk:1.11.0"
}

shadowJar {
    classifier = "all"
    dependencies {
        exclude(dependency('org.jetbrains.kotlin:.*'))
    }
    dependencies {
        exclude(dependency('org.jetbrains:annotations:.*'))
    }
}

test {
    failFast = true
}

dokka {
    outputFormat = 'gfm'
    outputDirectory = "$buildDir/dokka"
    configuration {
        includeNonPublic = false
        skipEmptyPackages = true
    }
}

ktlint {
    verbose = true
    additionalEditorconfigFile = file("check/.editorconfig")
    kotlinScriptAdditionalPaths {
        include fileTree("src/integrationTest/")
        include fileTree("src/testFixtures/")
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

extraArchive {
    sources = true
    tests = true
    javadoc = true
}

nexus {
    sign = true
    repositoryUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
    snapshotRepositoryUrl = 'https://oss.sonatype.org/content/repositories/snapshots'
}

modifyPom {
    project {
        name 'PubNub Kotlin SDK'
        description 'PubNub is a cross-platform client-to-client (1:1 and 1:many) push service in the cloud, capable of\n' +
                '        broadcasting real-time messages to millions of web and mobile clients simultaneously, in less than a quarter\n' +
                '        second!'
        url 'https://github.com/pubnub/kotlin'
        inceptionYear '2020'

        scm {
            url 'https://github.com/pubnub/kotlin'
        }

        licenses {
            license {
                name 'MIT License'
                url 'https://github.com/pubnub/pubnub-api/blob/master/LICENSE'
                distribution 'repo'
            }
        }

        developers {
            developer {
                id 'PubNub'
                name 'PubNub'
                email 'support@pubnub.com'
            }
        }
    }
}

build.finalizedBy(dokka, shadowJar)
