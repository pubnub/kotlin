plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.7.20'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'java-library'
    id 'java-test-fixtures'
    id "org.jlleitschuh.gradle.ktlint" version "11.0.0"
    id "jacoco"
    id 'org.jetbrains.dokka' version '1.7.10'
    id 'org.unbroken-dome.test-sets' version '4.0.0'
    id "com.github.ben-manes.versions" version '0.42.0'
    id "com.vanniktech.maven.publish" version '0.22.0'
}


allprojects {
    apply plugin: "com.vanniktech.maven.publish"

    if (project.name != "pubnub-kotlin-bom") {
        apply plugin: 'org.unbroken-dome.test-sets'
        apply plugin: 'org.jetbrains.kotlin.jvm'
        apply plugin: "org.jlleitschuh.gradle.ktlint"


        repositories {
            mavenCentral()
        }

        testSets {
            integrationTest
        }

        configurations {
            allTest
            testFixturesImplementation { extendsFrom allTest }
            integrationTestImplementation { extendsFrom allTest }
            testImplementation { extendsFrom allTest }
        }


        test {
            failFast = true
            exclude '**/contract/*.class'
        }

        ktlint {
            outputToConsole = true
            verbose = true
            additionalEditorconfigFile = file("check/.editorconfig")
            kotlinScriptAdditionalPaths {
                include fileTree("src/integrationTest/")
                include fileTree("src/testFixtures/")
            }
        }

        dependencies {
            allTest "org.awaitility:awaitility-kotlin:4.0.3"
            allTest "junit:junit:4.13.2"
            allTest "org.junit.jupiter:junit-jupiter-engine:5.8.2"
            allTest "io.mockk:mockk:1.11.0"
            allTest "org.aeonbits.owner:owner:1.0.12"
        }

        compileKotlin {
            kotlinOptions.jvmTarget = "1.8"
        }
        compileTestKotlin {
            kotlinOptions.jvmTarget = "1.8"
        }

        compileKotlin.finalizedBy(task("compileIntegrationTest"))
    }
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}


dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"

    implementation 'org.json:json:20230227'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.2'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-cbor:2.14.2'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.14.2'

    implementation "org.slf4j:slf4j-api:1.7.30"

    api 'com.squareup.okhttp3:logging-interceptor:4.9.3'
    api 'com.google.code.gson:gson:2.9.0'

    allTest "com.github.tomakehurst:wiremock:2.27.2"

    allTest "ch.qos.logback:logback-classic:1.2.11"
    allTest "ch.qos.logback:logback-core:1.2.11"
    allTest "org.json:json:20230227"

    testImplementation group: 'io.cucumber', name: 'cucumber-java', version: '6.10.4'
    testImplementation group: 'io.cucumber', name: 'cucumber-junit', version: '6.10.4'
    testImplementation group: 'io.cucumber', name: 'cucumber-picocontainer', version: '6.10.4'
//    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'
//    testImplementation 'org.junit.vintage:junit-vintage-engine:5.8.2'
}

shadowJar {
    classifier = "all"
    dependencies {
        exclude(dependency('org.jetbrains.kotlin:.*'))
    }
    dependencies {
        exclude(dependency('org.jetbrains:annotations:.*'))
    }
}

task cucumber(type: Test) {
    systemProperty "cucumber.filter.tags", System.getProperty("cucumber.filter.tags")
    systemProperty "cucumber.features", System.getProperty("cucumber.features")
    systemProperty "cucumber.plugins", System.getProperty("cucumber.plugins")
}


dokkaGfm {
    dokkaSourceSets {
        configureEach {
            skipEmptyPackages.set(true)
        }
    }
}

sourceSets {
    test {
        resources {
            srcDir 'src/testFixtures/resources'
        }
    }
    integrationTest {
        resources {
            srcDir 'src/testFixtures/resources'
        }
    }
}

build.finalizedBy(dokkaGfm, shadowJar)
