[versions]
#when updating here update in .pubnub.yml as well
jupiter = "5.11.3"
cucumber = "6.10.4"
logback = "1.2.11"
okhttp = "4.12.0"
retrofit2 = "2.11.0"
nexus = "2.0.0"
kotlin = "2.1.20"
vanniktech = "0.29.0"
ktlint = "12.1.0"
dokka = "2.0.0"
kotlinx_datetime = "0.6.2"
kotlinx_coroutines = "1.10.2"
pubnub_js = "9.8.1"
pubnub_swift = "9.3.2"

[libraries]
retrofit2 = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit2" }
retrofit2-converter-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit2" }
json = { module = "org.json:json", version = "20240303" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okhttp-logging = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }
gson = { module = "com.google.code.gson:gson", version = "2.11.0" }
slf4j = { module = "org.slf4j:slf4j-api", version = "1.7.36" }
cbor = { module = "co.nstant.in:cbor", version = "0.9" }
jetbrains-annotations = { module = "org.jetbrains:annotations", version = "24.1.0" }
kotlinx-atomicfu = { module = "org.jetbrains.kotlinx:atomicfu", version = "0.24.0" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx_datetime"}
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx_coroutines"}

# tests
wiremock = { module = "com.github.tomakehurst:wiremock", version = "2.27.2" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
logback-core = { module = "ch.qos.logback:logback-core", version.ref = "logback" }
cucumber-java = { module = "io.cucumber:cucumber-java", version.ref = "cucumber" }
cucumber-junit = { module = "io.cucumber:cucumber-junit", version.ref = "cucumber" }
cucumber-picocontainer = { module = "io.cucumber:cucumber-picocontainer", version.ref = "cucumber" }
awaitility = { module = "org.awaitility:awaitility-kotlin", version = "4.0.3" }
junit4 = { module = "junit:junit", version = "4.13.2" }
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "jupiter" }
junit-vintage-engine = { module = "org.junit.vintage:junit-vintage-engine", version.ref = "jupiter" }
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter", version.ref = "jupiter" }
mockk = { module = "io.mockk:mockk", version = "1.11.0" }
owner = { module = "org.aeonbits.owner:owner", version = "1.0.12" }
mockito = { module = "org.mockito:mockito-core", version = "4.8.1" }
hamcrest = { module = "org.hamcrest:hamcrest-all", version = "1.3" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx_coroutines"}

# plugins for included build
kotlin-gradlePlugin = { group = "org.jetbrains.kotlin", name = "kotlin-gradle-plugin", version.ref = "kotlin" }
nexus-gradlePlugin = { module = "io.github.gradle-nexus:publish-plugin", version.ref = "nexus" }
vanniktech-gradlePlugin = { module = "com.vanniktech:gradle-maven-publish-plugin", version.ref = "vanniktech" }
ktlint-gradlePlugin = { module = "org.jlleitschuh.gradle:ktlint-gradle", version.ref = "ktlint" }
dokka-gradlePlugin = { module = "org.jetbrains.dokka:dokka-gradle-plugin", version.ref = "dokka" }

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlinx-atomicfu = { id = "org.jetbrains.kotlin.plugin.atomicfu", version.ref = "kotlin" }
# shadow = { id = "com.github.johnrengelman.shadow", version = "7.1.2" }
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlint"  }
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }
benmanes-versions = { id = "com.github.ben-manes.versions", version = "0.42.0" }
vanniktech-maven-publish = { id = "com.vanniktech.maven.publish", version.ref = "vanniktech" }
lombok = { id = "io.freefair.lombok", version = "8.6" }
gradle-nexus-publish = { id = "io.github.gradle-nexus.publish-plugin", version.ref = "nexus" }
codingfeline-buildkonfig = { id = "com.codingfeline.buildkonfig", version = "0.15.1" }