plugins {
    id 'org.jetbrains.kotlin.jvm'
    id 'java-library'
    id 'java-test-fixtures'
    id "org.jlleitschuh.gradle.ktlint"
    id "jacoco"
    id 'org.jetbrains.dokka'
    id "com.github.ben-manes.versions"
    id "com.vanniktech.maven.publish"
}

group = "com.pubnub"
version = "9.0.0-beta01"


sourceSets {
    integrationTest {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}

configurations {
    integrationTestImplementation.extendsFrom(testImplementation)
}

test {
    failFast = true
    exclude '**/contract/*.class'
    useJUnitPlatform()
}

ktlint {
    outputToConsole = true
    verbose = true
    additionalEditorconfig = [
            "ij_kotlin_imports_layout" : "*,java.**,javax.**,kotlin.**,^",
            "indent_size" : "4",
    ]
    kotlinScriptAdditionalPaths {
        include fileTree("src/integrationTest/")
        include fileTree("src/testFixtures/")
    }
}

kotlin {
    jvmToolchain(8)
}

dependencies {
    api(project(":pubnub-core:pubnub-core-api"))
    implementation(project(":pubnub-core:pubnub-core-impl"))

    testImplementation libs.wiremock

    testImplementation libs.logback.classic
    testImplementation libs.logback.core
    testImplementation libs.json

    testImplementation libs.junit4
    testImplementation libs.awaitility
    testImplementation libs.junit.vintage.engine
    testImplementation libs.junit.jupiter
    testImplementation libs.junit.jupiter.engine
    testImplementation libs.mockk
    testImplementation libs.owner
}


dokkaGfm {
    dokkaSourceSets {
        configureEach {
            skipEmptyPackages.set(true)
        }
    }
}

build.finalizedBy(dokkaGfm)