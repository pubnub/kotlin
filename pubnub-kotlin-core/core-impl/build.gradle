plugins {
    id 'org.jetbrains.kotlin.jvm'
    id 'com.github.johnrengelman.shadow'
    id 'java-library'
    id 'java-test-fixtures'
    id "org.jlleitschuh.gradle.ktlint"
    id "jacoco"
    id 'org.jetbrains.dokka'
    id "com.github.ben-manes.versions"
    id "com.vanniktech.maven.publish"
}

repositories {
    mavenCentral()
}

sourceSets {
    integrationTest {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}

configurations {
    integrationTestImplementation.extendsFrom(testImplementation)
}

test {
    failFast = true
    exclude '**/contract/*.class'
    useJUnitPlatform()
}

kotlin {
    jvmToolchain(8)
}

ktlint {
    outputToConsole = true
    verbose = true
    additionalEditorconfig = [
            "ij_kotlin_imports_layout" : "*,java.**,javax.**,kotlin.**,^",
            "indent_size" : "4",
    ]
    kotlinScriptAdditionalPaths {
        include fileTree("src/integrationTest/")
        include fileTree("src/testFixtures/")
    }
}

compileKotlin.finalizedBy(task("compileIntegrationTest"))

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    api project(":pubnub-kotlin-core:core-api")

    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"
    implementation 'com.squareup.okhttp3:okhttp:4.11.0'
    api 'com.squareup.okhttp3:logging-interceptor:4.11.0'

    api 'org.json:json:20240205'
    api 'com.google.code.gson:gson:2.10.1'

    implementation "org.slf4j:slf4j-api:1.7.36"
    implementation 'co.nstant.in:cbor:0.9'

    testImplementation "com.github.tomakehurst:wiremock:2.27.2"

    testImplementation "ch.qos.logback:logback-classic:1.2.11"
    testImplementation "ch.qos.logback:logback-core:1.2.11"

    testImplementation group: 'io.cucumber', name: 'cucumber-java', version: '6.10.4'
    testImplementation group: 'io.cucumber', name: 'cucumber-junit', version: '6.10.4'
    testImplementation group: 'io.cucumber', name: 'cucumber-picocontainer', version: '6.10.4'
    testImplementation 'com.fasterxml.jackson.core:jackson-databind:2.14.2'
//    integrationTestImplementation(testFixtures(project(":")))

    testImplementation "org.awaitility:awaitility-kotlin:4.0.3"

    testImplementation "junit:junit:4.13.2"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:5.8.2"
    testImplementation "org.junit.vintage:junit-vintage-engine:5.8.2"
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'
    testImplementation "io.mockk:mockk:1.11.0"
    testImplementation "org.aeonbits.owner:owner:1.0.12"

    testFixturesImplementation "com.github.tomakehurst:wiremock:2.27.2"
    testFixturesImplementation "org.awaitility:awaitility-kotlin:4.0.3"
    testFixturesImplementation "junit:junit:4.13.2"
    testFixturesImplementation "org.aeonbits.owner:owner:1.0.12"

//
//    integrationTestImplementation project(":")
//    integrationTestImplementation project

}

shadowJar {
//    classifier = "all"
    dependencies {
        exclude(dependency('org.jetbrains.kotlin:.*'))
    }
    dependencies {
        exclude(dependency('org.jetbrains:annotations:.*'))
    }
}

task cucumber(type: Test) {
    systemProperty "cucumber.filter.tags", System.getProperty("cucumber.filter.tags")
    systemProperty "cucumber.features", System.getProperty("cucumber.features")
    systemProperty "cucumber.plugins", System.getProperty("cucumber.plugins")
}


dokkaGfm {
    dokkaSourceSets {
        configureEach {
            skipEmptyPackages.set(true)
        }
    }
}

sourceSets {
    test {
        resources {
            srcDir 'src/testFixtures/resources'
        }
    }
    integrationTest {
        resources {
            srcDir 'src/testFixtures/resources'
        }
    }
}

build.finalizedBy(dokkaGfm, shadowJar)
